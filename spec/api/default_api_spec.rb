=begin
#MTM

#Multi-tenancy-manager for LeanIX. Manages accounts, contracts, users, workspaces, permissions, and more.

The version of the OpenAPI document: 1.6.348

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixMtmApi::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = LeanixMtmApi::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(LeanixMtmApi::DefaultApi)
    end
  end

  # unit tests for authorize_callback
  # @param [Hash] opts the optional parameters
  # @option opts [String] :request 
  # @option opts [String] :state 
  # @option opts [String] :username 
  # @option opts [String] :password 
  # @option opts [String] :workspace 
  # @return [nil]
  describe 'authorize_callback test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for authorize_callback_get
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'authorize_callback_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for authorize_callback_saml
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'authorize_callback_saml test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for authorize_through_saml_get
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'authorize_through_saml_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create
  # LongLivedBearerToken
  # Create a new long-lived bearer token.
  # @param [Hash] opts the optional parameters
  # @return [LongLivedBearerTokenResponse]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_impersonation
  # @param impersonation The impersonation to create; only the workspace/id and reason fields are relevant here.
  # @param [Hash] opts the optional parameters
  # @return [ImpersonationResponse]
  describe 'create_impersonation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_workspaces
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page number to access (1 indexed, defaults to 1)
  # @option opts [Integer] :size The page size requested (defaults to 30, max 100)
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @option opts [String] :email Email of the impersonator to filter impersonations by
  # @return [ImpersonationListResponse]
  describe 'get_workspaces test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invalidate
  # LongLivedBearerToken
  # Invalidate an existing long-lived bearer token.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [LongLivedBearerTokenResponse]
  describe 'invalidate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list
  # LongLivedBearerToken
  # List all long-lived bearer tokens.
  # @param [Hash] opts the optional parameters
  # @return [Array<LongLivedBearerTokenResponse>]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pf_events
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier 
  # @return [nil]
  describe 'pf_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for process_graph_ql
  # processGraphQL
  # Processes GraphQL requests
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [GraphQLResult]
  describe 'process_graph_ql test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_impersonation
  # @param id The id of the support user impersonation to update.
  # @param [Hash] opts the optional parameters
  # @option opts [Impersonation] :impersonation The new impersonation data; only the reason field is relevant here.
  # @return [ImpersonationResponse]
  describe 'update_impersonation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
