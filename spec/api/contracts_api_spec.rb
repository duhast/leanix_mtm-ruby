=begin
#MTM

#Multi-tenancy-manager for LeanIX. Manages accounts, contracts, users, workspaces, permissions, and more.

The version of the OpenAPI document: 1.6.348

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixMtmApi::ContractsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContractsApi' do
  before do
    # run before each test
    @api_instance = LeanixMtmApi::ContractsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContractsApi' do
    it 'should create an instance of ContractsApi' do
      expect(@api_instance).to be_instance_of(LeanixMtmApi::ContractsApi)
    end
  end

  # unit tests for create_contract
  # createContract
  # Add a contract. Restricted to LeanIX internal use only.
  # @param [Hash] opts the optional parameters
  # @option opts [Contract] :body contract data
  # @return [ContractResponse]
  describe 'create_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_contract
  # deleteContract
  # Delete a contract. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @return [ContractResponse]
  describe 'delete_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contract
  # getContract
  # Get a contract. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @return [ContractResponse]
  describe 'get_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_contracts
  # getContracts
  # Retrieves all contracts. Restricted to LeanIX internal use only.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q Search for account, type or status
  # @option opts [Integer] :page The page number to access (1 indexed, defaults to 1)
  # @option opts [Integer] :size The page size requested (defaults to 30, max 100)
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @return [ContractListResponse]
  describe 'get_contracts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_custom_features
  # getCustomFeatures
  # Endpoint to list the contract specific custom features. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @return [CustomFeatureListResponse]
  describe 'get_custom_features test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_events
  # getEvents
  # Retrieves all events for the contract. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :since time limit, list only newer events (date must be ISO 8601 formatted)
  # @option opts [Integer] :page The page number to access (1 indexed, defaults to 1)
  # @option opts [Integer] :size The page size requested (defaults to 100, max 100)
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @return [EventListResponse]
  describe 'get_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_settings
  # getSettings
  # Endpoint to list the contract specific settings. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Setting type
  # @return [SettingListResponse]
  describe 'get_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_workspaces
  # getWorkspaces
  # Get the workspaces of a contract. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @return [WorkspaceListResponse]
  describe 'get_workspaces test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_contract
  # updateContract
  # Update a contract. Restricted to LeanIX internal use only.
  # @param id Contract UUID
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ContractResponse]
  describe 'update_contract test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
