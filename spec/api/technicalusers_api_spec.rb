=begin
#MTM

#Multi-tenancy-manager for LeanIX. Manages accounts, contracts, users, workspaces, permissions, and more.

The version of the OpenAPI document: 1.6.348

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixMtmApi::TechnicalusersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TechnicalusersApi' do
  before do
    # run before each test
    @api_instance = LeanixMtmApi::TechnicalusersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TechnicalusersApi' do
    it 'should create an instance of TechnicalusersApi' do
      expect(@api_instance).to be_instance_of(LeanixMtmApi::TechnicalusersApi)
    end
  end

  # unit tests for create_technical_user
  # createTechnicalUser
  # Create a technical user
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :workspace_id 
  # @return [TechnicalUserResponse]
  describe 'create_technical_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_technical_user
  # deleteTechnicalUser
  # Delete a technical user.
  # @param id User UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_technical_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_events
  # getEvents
  # Retrieves the technical user events for an user 
  # @param id User UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :workspace_id 
  # @option opts [Integer] :page The page number to access (1 indexed, defaults to 1)
  # @option opts [Integer] :size The page size requested (defaults to 100, max 100)
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @return [EventListResponse]
  describe 'get_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_technical_user
  # getTechnicalUser
  # Returns technical user data.
  # @param id TechnicalUser UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :workspace_id The id of the workspace the technical user belong to only usable for a System User
  # @return [TechnicalUserResponse]
  describe 'get_technical_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_technical_users
  # Technical users
  # List or search all technical users.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page number to access (1 indexed, defaults to 1)
  # @option opts [Integer] :size The page size requested (defaults to 30, max 100)
  # @option opts [String] :query_user_name Search in technical user name (optional)
  # @option opts [String] :sort Comma-separated list of sorting (optional)
  # @option opts [String] :workspace_id The id of the workspace the technical user belong to only usable for a System User
  # @return [TechnicalUserListResponse]
  describe 'get_technical_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for replace_token_for_technical_user
  # replaceTechnicalUserAPIToken
  # Replace the API Token for a technical user
  # @param id TechnicalUser UUID
  # @param [Hash] opts the optional parameters
  # @return [TechnicalUserResponse]
  describe 'replace_token_for_technical_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_technical_user
  # updateTechnicalUser
  # Update a technical user
  # @param id TechnicalUser UUID
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [TechnicalUserResponse]
  describe 'update_technical_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
