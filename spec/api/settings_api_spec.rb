=begin
#MTM

#Multi-tenancy-manager for LeanIX. Manages accounts, contracts, users, workspaces, permissions, and more.

The version of the OpenAPI document: 1.6.348

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixMtmApi::SettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SettingsApi' do
  before do
    # run before each test
    @api_instance = LeanixMtmApi::SettingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingsApi' do
    it 'should create an instance of SettingsApi' do
      expect(@api_instance).to be_instance_of(LeanixMtmApi::SettingsApi)
    end
  end

  # unit tests for create_setting
  # createSetting
  # Endpoint to set a setting.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [SettingResponse]
  describe 'create_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_setting
  # Delete a setting
  # Endpoint to delete a setting.
  # @param id Setting UUID
  # @param [Hash] opts the optional parameters
  # @return [SettingResponse]
  describe 'delete_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notification_settings
  # getNotificationSettings
  # Endpoint to get all settings related to notifications, internal usage only.
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [SettingListResponse]
  describe 'get_notification_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_setting
  # getSetting
  # Endpoint to get a setting.
  # @param id Setting UUID
  # @param [Hash] opts the optional parameters
  # @return [SettingResponse]
  describe 'get_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_settings
  # getSettings
  # Retrieves settings
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account_id Account UUID
  # @option opts [String] :contract_id Contract UUID
  # @option opts [String] :user_id User UUID
  # @option opts [String] :workspace_id Workspace UUID
  # @option opts [String] :permission_id Permission UUID
  # @option opts [String] :application Application name
  # @option opts [String] :type Setting type
  # @return [SettingListResponse]
  describe 'get_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_workspace_notification_status
  # toggleNotifications
  # Endpoint to enable/disable notifications.
  # @param disabled 
  # @param [Hash] opts the optional parameters
  # @return [SettingResponse]
  describe 'set_workspace_notification_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_setting
  # Update a setting
  # Endpoint to update a setting.
  # @param id Setting UUID
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [SettingResponse]
  describe 'update_setting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
